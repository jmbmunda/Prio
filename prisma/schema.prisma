// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  email      String      @unique
  name       String?
  tasks      Task[]
  projects   Project[]
  checklists Checklist[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?
  slot        Int       @default(0)
  images      Image[]
  status      Status?   @relation(fields: [status_id], references: [id])
  status_id   String?
  created_at  DateTime? @default(now())
  updated_at  DateTime? @updatedAt
  project_id  String?
  project     Project?  @relation(fields: [project_id], references: [id])
  user_id     Int?
  user        User?     @relation(fields: [user_id], references: [id])
  tags        Tag[]     @relation("taskTags")
  taskTags    Tasktag[]
}

model Status {
  id    String @id @default(uuid())
  name  String @unique
  color String @default("#D3D3D3")
  tasks Task[]
}

model Image {
  id      String  @id @default(uuid())
  name    String
  url     String
  uuid    String?
  task_id String?
  task    Task?   @relation(fields: [task_id], references: [id])
}

model Tasktag {
  task_id String
  tag_id  String
  task    Task   @relation(fields: [task_id], references: [id])
  tag     Tag    @relation(fields: [tag_id], references: [id])

  @@id([task_id, tag_id])
}

model Tag {
  id       String    @id @default(uuid())
  name     String    @unique
  color    String?
  tasks    Task[]    @relation("taskTags")
  taskTags Tasktag[]
}

model Project {
  id         String    @id @default(uuid())
  name       String
  color      String?
  created_at DateTime? @default(now())
  updated_at DateTime?
  tasks      Task[]
  user       User?     @relation(fields: [user_id], references: [id])
  user_id    Int?
}

model Checklist {
  id         String    @id @default(uuid())
  text       String
  is_checked Boolean
  user       User?     @relation(fields: [user_id], references: [id])
  user_id    Int?
  created_at DateTime? @default(now())
}
